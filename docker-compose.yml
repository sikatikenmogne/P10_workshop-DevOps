version: "3.2"  # Specify Docker Compose version

volumes:
  nexus-data: {}  # Define empty volume for Nexus data
  jenkins-data: {}  # Define empty volume for Jenkins data
  postgresql: {}
  postgresql_data: {}
  sonarqube_data: {}
  sonarqube_extensions: {}
  sonarqube_logs: {}

services:
  jenkins:
    container_name: jenkins
    hostname: jenkins
    user: root
    privileged: true
    image: jenkins/jenkins:lts-jdk17  # Use latest Jenkins image
    ports:
      - 8080:8080  # Map container port 8080 to host port 8080 (Jenkins UI)
      - 50000:50000
    volumes:
      - jenkins-data:/var/jenkins_home  # Persistent storage for Jenkins data
    environment:
      - JENKINS_HOME=/var/jenkins_home
    # restart: unless-stopped  # Restart Jenkins container unless manually stopped

  sonarqube:
    container_name: sonarqube
    hostname: sonarqube
    image: sonarqube
    ports:
      - 9000:9000
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - ./entrypoint.sh:/entrypoint.sh  # Mount the custom entrypoint script
    entrypoint: ["/bin/bash", "/entrypoint.sh"]  # Use the custom entrypoint script
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar

  db:
    container_name: db
    hostname: db
    image: postgres:12
    ports:
      - 5430:5432
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  nexus:
    container_name: nexus
    hostname: nexus
    image: sonatype/nexus3:latest  # Use latest Nexus image
    ports:
      - 8081:8081  # Map container port 8081 to host port 8081 (Nexus UI)
    volumes:
      - nexus-data:/var/sonatype-work/nexus3  # Persistent storage for Nexus data
    environment:
      - SONATYPE_NE=nexus  # Set initial admin password (change for production)
    # restart: unless-stopped
